{"version":3,"sources":["../src/block_countdown_ctrl.js"],"names":["PanelCtrl","_","panelDefaults","bgColor","launchTimestamp","Math","floor","Date","now","blockLength","fontSize","showLabels","CountdownTracker","label","value","el","document","createElement","className","innerHTML","top","querySelector","bottom","back","backBottom","update","val","slice","currentValue","setAttribute","innerText","classList","remove","offsetWidth","add","BlockCountdownCtrl","$scope","$injector","defaultsDeep","panel","events","on","onInitEditMode","bind","onPanelTeardown","render","addEditorTab","$timeout","cancel","nextTickPromise","endtime","t","parse","ret","days","hours","minutes","seconds","Total","Days","Hours","Minutes","Seconds","countdown","ceil","trackers","getTimeRemaining","getEndDate","empty","key","append","updateClock","scope","elem","initStyles","find","renderClock","window","System","import","panelPath","grafanaBootData","user","lightTheme","_panelPath","undefined","pluginId","templateUrl"],"mappings":"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","file":"block_countdown_ctrl.js","sourcesContent":["import {PanelCtrl} from 'app/plugins/sdk'\nimport _ from 'lodash'\n\nconst panelDefaults = {\n  bgColor: null,\n  launchTimestamp: Math.floor(Date.now() / 1000) + 24 * 60 * 60,\n  blockLength: 512,\n  fontSize: '40px',\n  showLabels: false\n}\n\nexport class CountdownTracker {\n  constructor (label, value) {\n    const el = document.createElement('span')\n\n    el.className = 'flip-clock__piece'\n    el.innerHTML = '<b class=\"flip-clock__card card\"><b class=\"card__top\"></b><b class=\"card__bottom\"></b><b class=\"card__back\"><b class=\"card__bottom\"></b></b></b>'\n    if (label) {\n      el.innerHTML += '<span class=\"flip-clock__slot\">' + label + '</span>'\n    }\n\n    this.el = el\n\n    this.top = el.querySelector('.card__top')\n    this.bottom = el.querySelector('.card__bottom')\n    this.back = el.querySelector('.card__back')\n    this.backBottom = el.querySelector('.card__back .card__bottom')\n\n    this.update(value)\n  }\n\n  update (value) {\n    const val = ('0' + value).slice(-2)\n    if (val !== this.currentValue) {\n      if (this.currentValue >= 0) {\n        this.back.setAttribute('data-value', this.currentValue)\n        this.bottom.setAttribute('data-value', this.currentValue)\n      }\n      this.currentValue = val\n      this.top.innerText = this.currentValue\n      this.backBottom.setAttribute('data-value', this.currentValue)\n\n      this.el.classList.remove('flip')\n      void this.el.offsetWidth\n      this.el.classList.add('flip')\n    }\n  }\n}\n\nexport class BlockCountdownCtrl extends PanelCtrl {\n  constructor ($scope, $injector) {\n    super($scope, $injector)\n    _.defaultsDeep(this.panel, panelDefaults)\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this))\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this))\n    this.events.on('panel-initialized', this.render.bind(this))\n  }\n\n  onInitEditMode () {\n    this.addEditorTab('Options', 'public/plugins/block-countdown-panel/editor.html', 2)\n  }\n\n  onPanelTeardown () {\n    this.$timeout.cancel(this.nextTickPromise)\n  }\n\n  getTimeRemaining (endtime) {\n    const t = Date.parse(endtime) - Date.parse(new Date())\n\n    let ret = {}\n\n    const days = Math.floor(t / (1000 * 60 * 60 * 24))\n    const hours = Math.floor((t / (1000 * 60 * 60)) % 24)\n    const minutes = Math.floor((t / 1000 / 60) % 60)\n    const seconds = Math.floor((t / 1000) % 60)\n\n    ret.Total = t\n    if (days || this.panel.blockLength >= 60 * 60 * 24) {\n      ret.Days = days\n    }\n    if (hours || this.panel.blockLength >= 60 * 60) {\n      ret.Hours = hours\n    }\n    if (minutes || this.panel.blockLength >= 60) {\n      ret.Minutes = minutes\n    }\n    ret.Seconds = seconds\n\n    return ret\n  }\n\n  getEndDate () {\n    const now = Math.floor(Date.now() / 1000)\n    let countdown = this.panel.launchTimestamp\n\n    if (now >= this.panel.launchTimestamp) {\n      countdown = Math.ceil(now / this.panel.blockLength) * this.panel.blockLength\n    }\n\n    return new Date(countdown * 1000)\n  }\n\n  renderClock () {\n    this.trackers = {}\n    const t = this.getTimeRemaining(this.getEndDate())\n\n    this.el.empty()\n    for (const key in t) {\n      if (key === 'Total') {\n        continue\n      }\n      const label = this.panel.showLabels ? key : null\n      this.trackers[key] = new CountdownTracker(label, t[key])\n      this.el.append(this.trackers[key].el)\n    }\n\n    this.updateClock()\n  }\n\n  updateClock () {\n    const t = this.getTimeRemaining(this.getEndDate())\n    for (const key in this.trackers) {\n      if (t[key] != null) {\n        this.trackers[key].update(t[key])\n      }\n    }\n\n    this.nextTickPromise = this.$timeout(this.updateClock.bind(this), 500)\n  }\n\n  link (scope, elem) {\n    this.initStyles()\n    this.el = elem.find('.flip-clock')\n    this.events.on('render', () => {\n      this.renderClock()\n    })\n  }\n\n  initStyles () {\n    window.System.import(this.panelPath + 'css/panel.base.css!')\n    if (grafanaBootData.user.lightTheme) {\n      window.System.import(this.panelPath + 'css/panel.light.css!')\n    } else {\n      window.System.import(this.panelPath + 'css/panel.dark.css!')\n    }\n  }\n\n  get panelPath () {\n    if (this._panelPath === undefined) {\n      this._panelPath = `/public/plugins/${this.pluginId}/`\n    }\n    return this._panelPath\n  }\n}\n\nBlockCountdownCtrl.templateUrl = 'module.html'\n"]}